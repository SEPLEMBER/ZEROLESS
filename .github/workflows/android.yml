name: Build Android APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build --stacktrace

      - name: Build Debug APK
        run: ./gradlew assembleDebug --stacktrace

      # ----------------------------
      # NEW: resource diagnostics
      # ----------------------------
      - name: Create diagnostics dir
        run: mkdir -p build/resource-diagnostics || true

      - name: Find merged values.xml files
        run: |
          echo "Looking for merged values.xml files..."
          find app/build -type f -path "*/mergeDebugResources/*/values*.xml" -print || true
          # Also capture any merged values.xml in incremental merged.dir
          find app/build -type f -path "*/mergeDebugResources*/*/values*/values*.xml" -print || true
        continue-on-error: true

      - name: Copy merged values (if any) to diagnostics
        run: |
          set -e
          mkdir -p build/resource-diagnostics/merged
          # copy all candidate merged values.xml into diagnostics
          find app/build -type f -path "*/mergeDebugResources/*/values*.xml" -exec cp -v "{}" build/resource-diagnostics/merged/ \; || true
          find app/build -type f -path "*/mergeDebugResources*/*/values*/values*.xml" -exec cp -v "{}" build/resource-diagnostics/merged/ \; || true
          echo "Files copied:"
          ls -la build/resource-diagnostics/merged || true
        continue-on-error: true

      - name: Print merged values (first 200 lines) and hexdump for diagnostics
        run: |
          set -e
          echo "---- merged files list ----"
          ls -la build/resource-diagnostics/merged || true
          for f in build/resource-diagnostics/merged/*.xml; do
            [ -f "$f" ] || continue
            echo "==== FILE: $f ===="
            echo "---- first 200 lines ----"
            sed -n '1,200p' "$f" || true
            echo "---- hex dump of lines 1..80 (to reveal \\u / BOM / hidden bytes) ----"
            sed -n '1,80p' "$f" | hexdump -C || true
            echo
          done
        continue-on-error: true

      - name: Grep suspicious sequences in repo and build
        run: |
          echo "=== Search for literal {str} in repo ==="
          grep -R --line-number --fixed-strings '{str}' . || true
          echo "=== Search for literal {str} in build dir ==="
          grep -R --line-number --fixed-strings '{str}' app/build || true
          echo "=== Search for backslash-u sequences (\\u) in repo ==="
          git grep -n '\\u' || true
          echo "=== Search for backslashes in res files (possible escapes) ==="
          grep -R --line-number '\\\' app/src/main/res || true
          echo "=== Search for curly placeholders like {anything} in res ==="
          grep -R --line-number -E '\{[^}]+\}' app/src/main/res || true
        continue-on-error: true

      - name: Archive resource diagnostics
        uses: actions/upload-artifact@v4
        with:
          name: resource-diagnostics
          path: build/resource-diagnostics
          retention-days: 7
        if: always()

      # ----------------------------
      # Continue original flow
      # ----------------------------
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
          retention-days: 7

      - name: Decode Keystore
        env:
          ENCODED_KEYSTORE: ${{ secrets.KEYSTORE }}
        run: |
          echo "$ENCODED_KEYSTORE" | base64 -d > release.keystore
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

      - name: Build Release APK
        env:
          KEYSTORE_PATH: release.keystore
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          ./gradlew assembleRelease --stacktrace \
            -Pandroid.injected.signing.store.file=$KEYSTORE_PATH \
            -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$KEY_PASSWORD
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

      - name: List APK files
        run: ls -la app/build/outputs/apk/release/
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/app-release.apk
          retention-days: 7
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
